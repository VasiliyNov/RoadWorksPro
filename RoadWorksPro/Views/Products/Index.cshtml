@model List<RoadWorksPro.Models.Entities.RoadProduct>
@{
    ViewData["Title"] = "Каталог товарів";
    var cart = ViewBag.Cart as RoadWorksPro.Models.ViewModels.CartViewModel;
    var currentCategory = ViewBag.CurrentCategory as string;
}

<div class="py-12">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        @* Header *@
        <div class="mb-8">
            <h1 class="text-3xl font-bold text-gray-900 mb-4">Каталог дорожньої продукції</h1>
            <p class="text-gray-600">Сертифікована продукція від провідних виробників</p>
        </div>

        @* Category Filters *@
        <div class="mb-8 flex flex-wrap gap-2">
            <a href="/Products"
               class="px-4 py-2 @(string.IsNullOrEmpty(currentCategory) ? "bg-blue-700 text-white" : "bg-gray-200 text-gray-700 hover:bg-gray-300") rounded-lg transition">
                Всі товари
            </a>
            <a href="/Products?category=road-signs"
               class="px-4 py-2 @(currentCategory == "road-signs" ? "bg-blue-700 text-white" : "bg-gray-200 text-gray-700 hover:bg-gray-300") rounded-lg transition">
                Дорожні знаки
            </a>
            <a href="/Products?category=mirrors"
               class="px-4 py-2 @(currentCategory == "mirrors" ? "bg-blue-700 text-white" : "bg-gray-200 text-gray-700 hover:bg-gray-300") rounded-lg transition">
                Дзеркала оглядові
            </a>
            <a href="/Products?category=metal-structures"
               class="px-4 py-2 @(currentCategory == "metal-structures" ? "bg-blue-700 text-white" : "bg-gray-200 text-gray-700 hover:bg-gray-300") rounded-lg transition">
                Металоконструкції
            </a>
            <a href="/Products?category=speed-bumps"
               class="px-4 py-2 @(currentCategory == "speed-bumps" ? "bg-blue-700 text-white" : "bg-gray-200 text-gray-700 hover:bg-gray-300") rounded-lg transition">
                Елементи зниження швидкості
            </a>
            <a href="/Products?category=other"
               class="px-4 py-2 @(currentCategory == "other" ? "bg-blue-700 text-white" : "bg-gray-200 text-gray-700 hover:bg-gray-300") rounded-lg transition">
                Інше
            </a>
        </div>

        @* Products Grid *@
        <div class="grid grid-cols-1 md:grid-cols-3 lg:grid-cols-4 gap-6">
            @foreach (var product in Model)
            {
                <div class="bg-white rounded-lg shadow-md hover:shadow-xl transition-shadow overflow-hidden">
                    @* Product Image *@
                    <a href="/Products/Details/@product.Id" class="block h-48 bg-gray-100 flex items-center justify-center group">
                        @if (!string.IsNullOrEmpty(product.ImagePath))
                        {
                            <img src="@product.ImagePath" alt="@product.Name" class="h-full w-full object-cover group-hover:opacity-90 transition">
                        }
                        else
                        {
                            <svg class="h-20 w-20 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
                            </svg>
                        }
                    </a>

                    @* Product Info *@
                    <div class="p-4">
                        <h3 class="font-semibold text-lg mb-2 text-gray-900">
                            <a href="/Products/Details/@product.Id" class="hover:text-blue-600 transition">@product.Name</a>
                        </h3>

                        @if (!string.IsNullOrEmpty(product.Description))
                        {
                            <p class="text-sm text-gray-600 mb-3 line-clamp-2">@product.Description</p>
                        }

                        @* Specifications *@
                        <div class="space-y-1 mb-3">
                            @if (!string.IsNullOrEmpty(product.Dimensions))
                            {
                                <div class="text-xs text-gray-500">
                                    <span class="font-medium">Розміри:</span> @product.Dimensions
                                </div>
                            }
                            @if (!string.IsNullOrEmpty(product.Material))
                            {
                                <div class="text-xs text-gray-500">
                                    <span class="font-medium">Матеріал:</span> @product.Material
                                </div>
                            }
                            @if (!string.IsNullOrEmpty(product.Standard))
                            {
                                <div class="text-xs text-gray-500">
                                    <span class="font-medium">Стандарт:</span> @product.Standard
                                </div>
                            }
                        </div>

                        @* Price and Add to Cart *@
                        <div class="flex items-center justify-between">
                            <span class="text-2xl font-bold text-blue-700">₴ @product.Price.ToString("N0")</span>
                            <button class="add-to-cart-btn bg-orange-500 hover:bg-orange-600 text-white px-4 py-2 rounded-lg transition transform hover:scale-105 w-32 flex items-center justify-center"
                                    data-product-id="@product.Id"
                                    data-product-name="@product.Name"
                                    data-product-price="@product.Price">
                                <svg class="h-5 w-5 mr-1 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z" />
                                </svg>
                                <span>В кошик</span>
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>

        @if (!Model.Any())
        {
            <div class="text-center py-12">
                <svg class="h-24 w-24 text-gray-400 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 13V6a2 2 0 00-2-2H6a2 2 0 00-2 2v7m16 0v5a2 2 0 01-2 2H6a2 2 0 01-2-2v-5m16 0h-2.586a1 1 0 00-.707.293l-2.414 2.414a1 1 0 01-.707.293h-3.172a1 1 0 01-.707-.293l-2.414-2.414A1 1 0 006.586 13H4" />
                </svg>
                <p class="text-xl text-gray-500">Товарів поки немає</p>
            </div>
        }
    </div>
</div>

@* Floating Cart Summary *@
<div class="fixed bottom-4 right-4 bg-white rounded-lg shadow-xl p-4 hidden" id="cartNotification">
    <div class="flex items-center space-x-3">
        <svg class="h-6 w-6 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
        </svg>
        <span class="text-gray-700">Товар додано!</span>
    </div>
</div>

@section Scripts {
    <script>
        // Add to cart functionality
        document.querySelectorAll('.add-to-cart-btn').forEach(button => {
            button.addEventListener('click', async function(e) {
                e.preventDefault();

                const productId = this.dataset.productId;
                const originalHtml = this.innerHTML;
                const originalClasses = this.className;

                // Disable and show loading
                this.disabled = true;
                this.innerHTML = `
                    <svg class="animate-spin h-5 w-5 mr-1" fill="none" viewBox="0 0 24 24">
                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                    </svg>
                    <span>...</span>
                `;

                try {
                    const response = await fetch(`/Products/AddToCart/${productId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                        }
                    });

                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }

                    const data = await response.json();

                    if (data.success) {
                        // Update global cart counter
                        window.updateCartDisplay(data.cartCount);

                        // Show success state
                        this.className = originalClasses.replace('bg-orange-500 hover:bg-orange-600', 'bg-green-500 hover:bg-green-600');
                        this.innerHTML = `
                            <svg class="h-5 w-5 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
                            </svg>
                            <span>Додано!</span>
                        `;

                        // Show notification
                        showNotification();

                        // Reset button after delay
                        setTimeout(() => {
                            this.className = originalClasses;
                            this.innerHTML = originalHtml;
                            this.disabled = false;
                        }, 2000);
                    } else {
                        throw new Error('Failed to add to cart');
                    }
                } catch (error) {
                    console.error('Error:', error);

                    // Show error state
                    this.className = originalClasses.replace('bg-orange-500 hover:bg-orange-600', 'bg-red-500 hover:bg-red-600');
                    this.innerHTML = `
                        <svg class="h-5 w-5 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
                        </svg>
                        <span>Помилка</span>
                    `;

                    // Reset after delay
                    setTimeout(() => {
                        this.className = originalClasses;
                        this.innerHTML = originalHtml;
                        this.disabled = false;
                    }, 2000);
                }
            });
        });

        function showNotification() {
            const notification = document.getElementById('cartNotification');
            if (notification) {
                notification.classList.remove('hidden');
                setTimeout(() => {
                    notification.classList.add('hidden');
                }, 3000);
            }
        }
    </script>
}
}